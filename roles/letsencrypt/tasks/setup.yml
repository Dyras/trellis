---
- name: Fail if letsencrypt_contact_emails is not defined
  fail:
    msg: >
      Error: the required `letsencrypt_contact_emails` variable is not defined or invalid.


      Please define it in `groups_vars/all/main.yml` with at least one email (as a list/array, *not* a string):

        letsencrypt_contact_emails:
          - changeme@example.com

      The contact email is used by Let's Encrypt to send expiry notices when a certificate is coming up for renewal.


      See https://letsencrypt.org/docs/expiration-emails/ for more information.


      Since Trellis attempts to renew certificates after {{ letsencrypt_min_renewal_age }} days ({{ 90 - letsencrypt_min_renewal_age }} days before renewal),
      getting an expiry notice email means something has gone wrong giving you enough notice to fix the problem.

  when: (letsencrypt_contact_emails is not defined) or (letsencrypt_contact_emails is string)

- name: Create Acme group
  group:
    name: "{{ acme_user }}"
    state: present

- name: Create Acme user
  user:
    name: "{{ acme_user }}"
    group: "{{ acme_user }}"
    state: present

- name: Create directories and set permissions
  file:
    path: "{{ item.path }}"
    owner: "{{ item.owner | default(omit) }}"
    group: "{{ item.group | default(omit) }}"
    mode: "{{ item.mode | default(omit) }}"
    state: directory
  with_items:
    - path: "{{ acme_tiny_data_directory }}"
      mode: '0755'
    - path: "{{ acme_tiny_data_directory }}/csrs"
      owner: "{{ acme_user }}"
      group: "{{ acme_user }}"
    - path: "{{ acme_tiny_software_directory }}"
    - path: "{{ acme_tiny_challenges_directory }}"
    - path: "{{ letsencrypt_certs_dir }}"
      owner: "{{ acme_user }}"
      group: "{{ web_group }}"

- name: Clone acme-tiny repository
  git:
    dest: "{{ acme_tiny_software_directory }}"
    repo: "{{ acme_tiny_repo }}"
    version: "{{ acme_tiny_commit }}"
    accept_hostkey: yes

- name: Copy Lets Encrypt account key source file
  copy:
    src: "{{ letsencrypt_account_key_source_file }}"
    dest: "{{ letsencrypt_account_key }}"
    mode: '0640'
  when: letsencrypt_account_key_source_file is defined

- name: Copy Lets Encrypt account key source contents
  copy:
    content: "{{ letsencrypt_account_key_source_content | trim }}"
    dest: "{{ letsencrypt_account_key }}"
    mode: '0640'
  when: letsencrypt_account_key_source_content is defined

- name: Generate a new account key
  shell: openssl genrsa 4096 > {{ letsencrypt_account_key }}
  args:
    creates: "{{ letsencrypt_account_key }}"
  when: letsencrypt_account_key_source_content is not defined and letsencrypt_account_key_source_file is not defined

- name: Set account key permissions
  file:
    path: "{{ letsencrypt_account_key }}"
    mode: "0640"
    owner: "{{ acme_user }}"
    group: "{{ acme_user }}"
